openapi: 3.0.0
info:
  version: '1.0'
  title: Auth Service
  description: Service for internal authorization in gocom.
  contact:
    name: gocom
    url: 'https://github.com/shahincsejnu/gocom'
    email: gocom@gmail.com
servers:
  - url: 'http://localhost:8084'
    description: local
tags:
  - name: Authorization
paths:
  '/':
    GET:
      summary: Healthcheck.
      description: Healthcheck.
      operationId: healthcheck
      tags:
        - Healthcheck
      responses:
        '200':
          description: Healthcheck succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  serviceName:
                    type: string
                    example: AuthService
                required:
                  - ok
                  - serviceName
  /signup:
    post:
      summary: Signup.
      description: Signup.
      operationId: signup
      tags:
        - Signup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        '200':
          description: Signup succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Successfully Signedup
                required:
                  - ok
                  - message
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    /login:
    post:
      summary: Login.
      description: Login.
      operationId: login
      tags:
        - Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
              required:
                - name
                - password
      responses:
        '200':
          description: Login succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Successfully logged in
                  token:
                    type: string
                    description: jwt token
                required:
                  - ok
                  - message
                  - token
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /console:
    post:
      summary: Authorization from console.
      description: Authorization from console.
      operationId: authorization-console
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        '200':
          description: Console authorization succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/user'
                required:
                  - ok
                  - message
                  - user
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
components:
  responses:
    '400':
      description: An error occurred.
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                example: false
              message:
                type: string
                example: the request is invalid
            required:
              - ok
              - message
    '500':
      description: |
        An internal server error occurred.
        In this case, try running the request later.
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                example: false
              message:
                type: string
                example: 'there was an error, please try again later'
            required:
              - ok
              - message 
  schemas:
    user:
      type: object
      properties:
        id:
          type: string
          example: 7713b34a-27dc-5347-9fa8-12720f0dddcf
        name:
          type: string
          example: Sample User Name
        email:
          type: string
          example: demo@example.com
        password:
          type: string
          example: sample hashed password
        createdAt:
          type: number
        updatedAt:
          type: number
      required:
        - id
        - name
        - email
        - password
        - createdAt
        - updatedAt
