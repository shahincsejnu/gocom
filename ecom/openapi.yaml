openapi: 3.0.0
info:
  version: '1.0'
  title: Ecom Service
  description: Service for ecom CRUD operations in gocom.
  contact:
    name: gocom
    url: 'https://github.com/shahincsejnu/gocom'
    email: gocom@gmail.com
servers:
  - url: 'http://localhost:8085'
    description: local
tags:
  - name: ecom
paths:
  '/':
    GET:
      summary: Healthcheck.
      description: Healthcheck.
      operationId: healthcheck
      tags:
        - Healthcheck
      responses:
        '200':
          description: Healthcheck succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  serviceName:
                    type: string
                    example: EcomService
                required:
                  - ok
                  - serviceName
  '/users/{userID}':
    parameters:
      - name: userID
        in: path
        required: true
        schema:
          type: string
        description: user id of the respective user
    get:
      summary: Get user by userID.
      description: Get the details of a user with userID.
      operationId: get-one-user-by-userid
      tags:
        - User
      responses:
        '200':
          description: User fetching is succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/user'
                required:
                  - ok
                  - message
                  - user
  /products:
    get:
      summary: Get all the products
      description: Get the details of all products
      operationId: get-all-products
      tags:
        - Products
      responses:
        '200':
          description: Products fetching is succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/product'
                required:
                  - ok
                  - message
                  - products
    post:
      summary: Create a product
      description: To create/add a new product
      operationId: create-one-product
      tags:
        - Create Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                description:
                  type: string
                stock:
                  type: number
              required:
                - name
                - price
                - description
                - stock
      responses:
        '200':
          description: Product creation is succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                  productID:
                    type: string
                required:
                  - ok
                  - message
                  - productID
  '/products/{productID}':
    parameters:
      - name: productID
        in: path
        required: true
        schema:
          type: string
        description: product id of the respective product
    get:
      summary: Get one product by product id
      description: Get the details of a product
      operationId: get-one-product
      tags:
        - Product
      responses:
        '200':
          description: Product fetching is succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                  product:
                    $ref: '#/components/schemas/product'
                required:
                  - ok
                  - message
                  - product
    patch:
      summary: Update info of a product
      operationId: patch-product
      description: ''
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: number
                description:
                  type: string
                stock:
                  type: number
              required:
                - price
                - description
                - stock
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                required:
                  - ok
                  - message
components:
  schemas:
    user:
      type: object
      properties:
        id:
          type: string
          example: 7713b34a-27dc-5347-9fa8-12720f0dddcf
        name:
          type: string
          example: Sample User Name
        email:
          type: string
          example: demo@example.com
        password:
          type: string
          example: sample hashed password
        isAdmin:
          type: boolean
          example: false
        createdAt:
          type: number
        updatedAt:
          type: number
      required:
        - id
        - name
        - email
        - password
        - isAdmin
        - createdAt
        - updatedAt
    product:
      type: object
      properties:
        id:
          type: string
          example: 7713b34a-27dc-5347-9fa8-12720f0dddcf
        name:
          type: string
          example: Sample Product Name
        price:
          type: number
          example: 100
        description:
          type: string
          example: sample product
        stock:
          type: number
          example: 1
        createdAt:
          type: number
        updatedAt:
          type: number
      required:
        - id
        - name
        - price
        - description
        - stock
        - createdAt
        - updatedAt
